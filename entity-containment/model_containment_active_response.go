/*
 * Entity Containment API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package entitycontainment

type ContainmentActiveResponse struct {
	Active bool `json:"active"`
}

// AssertContainmentActiveResponseRequired checks if the required fields are not zero-ed
func AssertContainmentActiveResponseRequired(obj ContainmentActiveResponse) error {
	elements := map[string]interface{}{
		"active": obj.Active,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseContainmentActiveResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ContainmentActiveResponse (e.g. [][]ContainmentActiveResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseContainmentActiveResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aContainmentActiveResponse, ok := obj.(ContainmentActiveResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertContainmentActiveResponseRequired(aContainmentActiveResponse)
	})
}
