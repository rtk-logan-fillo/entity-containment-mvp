/*
 * Entity Containment API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package entitycontainment

// GenericErrorResponse - an error envelope; returned when we encounter an unexpected error
type GenericErrorResponse struct {

	// an internal error code associated with the specific failure
	Code string `json:"code,omitempty"`

	// a human-readable string describing the failure
	Message string `json:"message,omitempty"`

	Errors []GenericErrorResponseErrorsInner `json:"errors,omitempty"`
}

// AssertGenericErrorResponseRequired checks if the required fields are not zero-ed
func AssertGenericErrorResponseRequired(obj GenericErrorResponse) error {
	for _, el := range obj.Errors {
		if err := AssertGenericErrorResponseErrorsInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGenericErrorResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GenericErrorResponse (e.g. [][]GenericErrorResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGenericErrorResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGenericErrorResponse, ok := obj.(GenericErrorResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGenericErrorResponseRequired(aGenericErrorResponse)
	})
}
