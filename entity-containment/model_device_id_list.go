/*
 * Entity Containment API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package entitycontainment

// DeviceIdList - Array of deviceIDs
type DeviceIdList struct {

	// ID of the device
	DeviceIds []string `json:"device_ids"`
}

// AssertDeviceIdListRequired checks if the required fields are not zero-ed
func AssertDeviceIdListRequired(obj DeviceIdList) error {
	elements := map[string]interface{}{
		"device_ids": obj.DeviceIds,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDeviceIdListRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DeviceIdList (e.g. [][]DeviceIdList), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDeviceIdListRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDeviceIdList, ok := obj.(DeviceIdList)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDeviceIdListRequired(aDeviceIdList)
	})
}
