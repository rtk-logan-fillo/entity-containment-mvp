/*
 * Entity Containment API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package entitycontainment

// ErrorUnknown - error returned for a 404 indicating one of the provided params is unknown
type ErrorUnknown struct {

	// which subject is unknown
	Subject string `json:"subject"`

	// the value passed in that produced the unknown result
	Value string `json:"value"`

	// a human-readable string describing the failure
	Message string `json:"message"`
}

// AssertErrorUnknownRequired checks if the required fields are not zero-ed
func AssertErrorUnknownRequired(obj ErrorUnknown) error {
	elements := map[string]interface{}{
		"subject": obj.Subject,
		"value":   obj.Value,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseErrorUnknownRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ErrorUnknown (e.g. [][]ErrorUnknown), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseErrorUnknownRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aErrorUnknown, ok := obj.(ErrorUnknown)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertErrorUnknownRequired(aErrorUnknown)
	})
}
